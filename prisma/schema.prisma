generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produto {
  id             Int                 @id @unique @default(autoincrement())
  codigo         String              @unique
  imagem         String
  nome           String
  descricao      String
  tipo           tipoProduto[]
  fornecedor     fornecedorProduto[]
  diaValidade    Int
  mesValidade    Int
  anoValidade    Int
  quantidade     Int
  created_at     DateTime            @default(now())
  updated_at     DateTime            @updatedAt
  ProdutosPrecos ProdutosPrecos?
  Vendas         Venda[]
}

model tipoProduto {
  id        Int     @id @unique @default(autoincrement())
  produto   Produto @relation(fields: [produtoid], references: [codigo])
  tipo      Tipo    @relation(fields: [tipoid], references: [id])
  produtoid String
  tipoid    Int
}

model Tipo {
  id      Int           @id @unique @default(autoincrement())
  tipo    String
  produto tipoProduto[]
}

model fornecedorProduto {
  id           Int        @id @unique @default(autoincrement())
  produto      Produto    @relation(fields: [produtoid], references: [codigo])
  fornecedor   Fornecedor @relation(fields: [fornecedorid], references: [cnpj])
  produtoid    String
  fornecedorid String
}

model Fornecedor {
  id      Int                 @id @unique @default(autoincrement())
  nome    String
  cnpj    String                 @unique
  email   String
  contato String
  produto fornecedorProduto[]
}

model ProdutosPrecos {
  id               Int      @id @unique @default(autoincrement())
  codigoid         String   @unique
  precoCusto       Float
  porcentagemLucro Int
  promocaodesconto Int
  valorVenda       Float
  valorAtacado     Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  Produto          Produto  @relation(fields: [codigoid], references: [codigo])
}

model Role {
  id      Int       @id @unique @default(autoincrement())
  role    Boolean
  usuario Usuario[]
}

model Usuario {
  id         Int      @id @unique @default(autoincrement())
  nome       String
  email      String   @unique
  senha      String
  isAdmin    Int
  created_at DateTime @default(now())
  role       Role     @relation(fields: [isAdmin], references: [id])
  caixa      Caixa[]     
}

model Log {
  id            Int      @id @unique @default(autoincrement())
  idUser        String
  idProduto     String
  campoAlterado String
  valorOriginal String
  valorAlterado String
  created_at    DateTime @default(now())
}

model Mensagem {
  id       Int    @id @unique @default(autoincrement())
  mensagem String
}

model Venda {
  id            Int            @id @unique @default(autoincrement())
  codigoId      Produto        @relation(fields: [produto], references:[codigo])
  produto       String         
  quantidade    Int
  valorExtra    Int
  desconto      Int
  valorDebito   Int
  valorCredito  Int
  valorDinheiro Int
  valorFinal    Int
  created_at    DateTime @default(now())
  caixa         Int
  caixaId       Caixa    @relation(fields: [caixa], references:[id])
}

model Caixa {
  id             Int      @id @unique @default(autoincrement())
  data           DateTime @default(now()) @unique
  saldoInicial   Int
  userid         Usuario    @relation(fields: [usuario], references:[id])
  usuario        Int
  vendasDinheiro Int        @default(0)
  vendasDebito   Int        @default(0)
  vendasCredito  Int        @default(0)
  valorFinal     Int        @default(0)
  lucro          Int        @default(0)
  vendas         Venda[]
}

model Contas {
  id          Int @id @unique @default(autoincrement())
  pagamento   Int
  compra      Int
}